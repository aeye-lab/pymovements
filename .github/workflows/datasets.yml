name: datasets
on:
  pull_request:
    branches: [main]
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  prepare-matrix:
    name: prepare dataset matrix
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    outputs:
      all_datasets: ${{ steps.create-matrix.outputs.matrix }}
    steps:
      - name: Checkout pymovements repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install pymovements
        run: python -m pip install -e ${{ github.workspace }}

      - name: Create matrix for all datasets
        id: create-matrix
        run: python -c "from pymovements import DatasetLibrary; print(f'matrix={DatasetLibrary.names()}')" >> $GITHUB_OUTPUT

  test:
    name: test ${{ matrix.dataset }}
    runs-on: ubuntu-latest
    needs: [prepare-matrix]
    if: startsWith(github.event.ref, 'refs/tags/v')
    strategy:
      fail-fast: false
      matrix:
        dataset: ${{ fromJSON(needs.prepare-matrix.outputs.all_datasets) }}
    steps:
      - name: Checkout pymovements repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached environment
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          key:
            datasets-ubuntu-latest-py313-${{ hashFiles('tox.ini', 'pyproject.toml', '.github/workflows/datasets') }}
          path: |
            ~/.cache
            ~/.tox

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install tox
        run: python -m pip install tox

      - name: Setup test environment
        run: tox -vv --notest -e integration

      - name: Cache environment
        uses: actions/cache/save@v4
        if: github.ref == 'refs/heads/main'
        with:
          key:
            ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: |
            ~/.cache
            ~/.tox

      - name: Run dataset integration test
        run: tox --skip-pkg-install -e integration -- tests/integration/download_dataset_test.py::test_download_dataset[${{ matrix.dataset }}]

  docs:
    name: docs
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout pymovements repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install pymovements
        run: python -m pip install -e ${{ github.workspace }}

      - name: Write RST files
        run: python src/pymovements/_scripts/write_dataset_docpages.py

      - name: Commit dataset documentation changes
        uses: EndBug/add-and-commit@v9
        with:
          add: 'docs'
          message: 'update datasets documentation'
          default_author: github_actions
