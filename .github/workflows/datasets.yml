name: datasets
on:  # TODO: change to tagged commits only
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: test ${{ matrix.dataset }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        dataset:
          - BSC
          - BSCII
        os:
          - ubuntu-latest
#        tox_env:
#          - py39
#          - py310
#          - py311
#          - py312
#          - py313
#        exclude:
#            - os: macos-latest
#              tox_env: py39
#            - os: macos-13
#              tox_env: py310
#            - os: macos-13
#              tox_env: py311
#            - os: macos-13
#              tox_env: py312
#            - os: macos-13
#              tox_env: py313
#        include:
#          - tox_env: py39
#            python: "3.9"
#          - tox_env: py310
#            python: "3.10"
#          - tox_env: py311
#            python: "3.11"
#          - tox_env: py312
#            python: "3.12"
#          - tox_env: py313
#            python: "3.13"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Test
        run: echo ${{ matrix.dataset }}
#      - name: Setup python
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ matrix.python }}
#      - name: Install tox
#        run: python -m pip install tox
#      - name: Setup test environment
#        run: tox -vv --notest -e ${{ matrix.tox_env }}
#      - name: Run test
#        run: tox --skip-pkg-install -e ${{ matrix.tox_env }}
#      - name: Upload coverage reports to Codecov
#        if: success() || failure()
#        uses: codecov/codecov-action@v5
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}

#on:
#  push:
#  workflow_dispatch:

#jobs:
#  read-yaml:
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v3

#      - name: read-yaml-file
#        uses: pietrobolcato/action-read-yaml@1.0.0
#        id: read_action_js
#        with:
#          config: ${{ github.workspace }}/examples/config_example.yaml

#      - name: use-yaml-file
#        run: |
#          echo namespace: ${{ steps.read_action_js.outputs['namespace'] }}
#          echo location: ${{ steps.read_action_js.outputs['location'] }}
#          echo environment: ${{ steps.read_action_js.outputs['environment'] }}
#          echo resource_group_name: ${{ steps.read_action_js.outputs['resource_group_name'] }}
