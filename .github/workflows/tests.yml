name: tests

on:
  - push:
    branches: [main] 
  - pull_request:
    branches: [main]
    types:
        - opened
        - synchronize
        - edited
        - ready_for_review
  - workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: test ${{ matrix.tox_env }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
      MPLBACKEND: Agg
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-latest
          - ubuntu-latest
          - windows-latest
        tox_env:
          - py39
          - py310
          - py311
          - py312
          - py313
        exclude:
            - os: macos-latest
              tox_env: py39
            - os: macos-13
              tox_env: py310
            - os: macos-13
              tox_env: py311
            - os: macos-13
              tox_env: py312
            - os: macos-13
              tox_env: py313
        include:
          - tox_env: py39
            python: "3.9"
          - tox_env: py310
            python: "3.10"
          - tox_env: py311
            python: "3.11"
          - tox_env: py312
            python: "3.12"
          - tox_env: py313
            python: "3.13"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached environment
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          key:
            test-${{ matrix.os }}-${{ matrix.tox_env }}-${{ hashFiles('tox.ini', 'pyproject.toml', '.github/workflows/tests') }}
          path: |
            ~/.cache
            ~/.tox

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install tox
        run: python -m pip install tox

      - name: Setup test environment
        run: tox -vv --notest -e ${{ matrix.tox_env }}

      - name: Cache environment
        uses: actions/cache/save@v4
        if: github.ref == 'refs/heads/main'
        with:
          key:
            ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: |
            ~/.cache
            ~/.tox

      - name: Run test
        run: tox --skip-pkg-install -e ${{ matrix.tox_env }}

      - name: Upload coverage reports to Codecov
        if: success() || failure()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  pylint:
    name: pylint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached environment
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          key:
            pylint-ubuntu-latest-py39-${{ hashFiles('tox.ini', 'pyproject.toml', '.github/workflows/tests') }}
          path: |
            ~/.cache
            ~/.tox

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install tox
        run: python -m pip install tox

      - name: Setup test environment
        run: tox -vv --notest -e pylint

      - name: Cache environment
        uses: actions/cache/save@v4
        if: github.ref == 'refs/heads/main'
        with:
          key:
            ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: |
            ~/.cache
            ~/.tox

      - name: Run test
        run: tox --skip-pkg-install -e pylint


  minimum-requirements:
    name: minimum requirements
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached environment
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          key:
            test-minreq-${{ matrix.os }}-${{ matrix.tox_env }}-${{ hashFiles('tox.ini', 'pyproject.toml', '.github/workflows/tests') }}
          path: |
            ~/.cache
            ~/.tox

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install tox
        run: python -m pip install tox-min-req

      - name: Setup test environment
        run: MIN_REQ=1 tox -vv --notest -e py39

      - name: Cache environment
        uses: actions/cache/save@v4
        if: github.ref == 'refs/heads/main'
        with:
          key:
            ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: |
            ~/.cache
            ~/.tox

      - name: Run test
        run: MIN_REQ=1 tox --skip-pkg-install -e py39


  docs:
    name: docs (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached environment
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          key:
            docs-${{ matrix.os }}-py39-${{ hashFiles('tox.ini', 'pyproject.toml', '.github/workflows/tests') }}
          path: |
            ~/.cache
            ~/.tox

      - name: Install pandoc
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.19.2'

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install tox
        run: python -m pip install tox

      - name: Setup test environment
        run: tox -vv --notest -e docs

      - name: Cache environment
        uses: actions/cache/save@v4
        if: github.ref == 'refs/heads/main'
        with:
          key:
            ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: |
            ~/.cache
            ~/.tox

      - name: Run test
        run: tox --skip-pkg-install -e docs

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: html-docs-${{ matrix.os }}
          path: docs/build/
